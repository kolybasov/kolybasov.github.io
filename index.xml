<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mykola Basov&#39;s Blog</title>
    <link>https://kolybasov.github.io/</link>
    <description>Recent content on Mykola Basov&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Mar 2018 22:40:58 +0200</lastBuildDate>
    
	<atom:link href="https://kolybasov.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Making Ember Addon Installation Smoother</title>
      <link>https://kolybasov.github.io/posts/making-ember-addon-installation-smoother/</link>
      <pubDate>Mon, 19 Mar 2018 22:40:58 +0200</pubDate>
      
      <guid>https://kolybasov.github.io/posts/making-ember-addon-installation-smoother/</guid>
      <description>&lt;p&gt;Ember addon ecosystem is famous because of &lt;code&gt;ember install &amp;lt;addon-name&amp;gt;&lt;/code&gt; and it just works. It is convenient for addons users and ember-cli API provides a bunch of methods for addons developers to make this process as smooth as possible.&lt;/p&gt;

&lt;p&gt;Do you need to add &lt;code&gt;postcss&lt;/code&gt; package to app dependencies? Easy! Just use &lt;code&gt;this.addPackageToProject(&#39;postcss&#39;)&lt;/code&gt; method in your addon &lt;a href=&#34;https://ember-cli.com/extending/#default-blueprint&#34; target=&#34;_blank&#34;&gt;default blueprint&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Or maybe you need to create &lt;code&gt;postcss.config.js&lt;/code&gt; file? Easy! Add it to files directory in your addon default blueprint.&lt;/p&gt;

&lt;p&gt;Sounds like ember-cli has all you need to make your addon usage for end users just one terminal command. But imagine you are developing an addon for integrating with third-party service(let’s say google maps) and you are 100% sure your users will need to add API key to their &lt;code&gt;environment.js&lt;/code&gt; config to make your addon actually do something. And it turns you have limited choices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;override entire environment.js file with your keys;&lt;/li&gt;
&lt;li&gt;remind a user to add this keys manually.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sounds not really ember-ish right? “But there is an addon for this!”&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://kolybasov.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kolybasov.github.io/about/</guid>
      <description>Hello! I am Mykola and I am front-end developer(it is confession). Most time of my career I spent working with Ember.js framework. However, I am not one-framework-fan and really open-minded.
Aside from Ember.js, I tried(and believe understand them) a few more popular JS frameworks in particular React and Vue.
Sometimes there were need of build tools for my shiny-bleeding-edge-js-projects so I wrote some Node.js code too!
And finally when I finished to writing my custom silver-bullet webpack config(just kidding I use ember-cli!</description>
    </item>
    
  </channel>
</rss>